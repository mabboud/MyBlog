<html>

<body>

<p><font face="Verdana" size="2">Today orientation support added to EqualsLayout.</font></p>
<table border="1" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber1">
  <tr>
    <td width="100%">
    <pre><font style="font-family: monospaced" color="#808080"><i>/** 
 * </i><b>@author</b><i> Santhosh Kumar - santhosh@in.fiorano.com 
 */</i></font><font style="font-family: monospaced" color="#000000"> 
</font><font style="font-family: monospaced" color="#000080"><b>public</b></font><font style="font-family: monospaced" color="#000000"> </font><font style="font-family: monospaced" color="#000080"><b>class</b></font><font style="font-family: monospaced" color="#000000"> EqualsLayout </font><font style="font-family: monospaced" color="#000080"><b>implements</b></font><font style="font-family: monospaced" color="#000000"> LayoutManager, SwingConstants{ 
    ......
    </font><font style="font-family: monospaced" color="#000080"><b>private</b></font><font style="font-family: monospaced" color="#000000"> </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> orientation; 
 
    </font><font style="font-family: monospaced" color="#000080"><b>public</b></font><font style="font-family: monospaced" color="#000000"> EqualsLayout(</font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> orientation, </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> alignment, </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> gap){ 
        setOrientation(orientation); 
        setGap(gap); 
        setAlignment(alignment); 
    } 
 
    ..... 

    </font><font style="font-family: monospaced" color="#000080"><b>public</b></font><font style="font-family: monospaced" color="#000000"> </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> getOrientation(){ 
        </font><font style="font-family: monospaced" color="#000080"><b>return</b></font><font style="font-family: monospaced" color="#000000"> orientation; 
    } 
 
    </font><font style="font-family: monospaced" color="#000080"><b>public</b></font><font style="font-family: monospaced" color="#000000"> </font><font style="font-family: monospaced" color="#000080"><b>void</b></font><font style="font-family: monospaced" color="#000000"> setOrientation(</font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> orientation){ 
        </font><font style="font-family: monospaced" color="#000080"><b>if</b></font><font style="font-family: monospaced" color="#000000">(orientation!=HORIZONTAL &amp;&amp; orientation!=VERTICAL) 
            </font><font style="font-family: monospaced" color="#000080"><b>throw</b></font><font style="font-family: monospaced" color="#000000"> </font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> IllegalArgumentException(</font><font style="font-family: monospaced" color="#008000"><b>&quot;Invalid Orientation: &quot;</b></font><font style="font-family: monospaced" color="#000000">+orientation); 
        </font><font style="font-family: monospaced" color="#000080"><b>this</b></font><font style="font-family: monospaced" color="#000000">.orientation = orientation; 
    } 
 
    </font><font style="font-family: monospaced" color="#000080"><b>private</b></font><font style="font-family: monospaced" color="#000000"> Dimension[] dimensions(Component children[]){ 
        ...... 
 
        </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> usedWidth = orientation==HORIZONTAL 
                        ? maxWidth * visibleCount + gap * (visibleCount - </font><font style="font-family: monospaced" color="#0000ff">1</font><font style="font-family: monospaced" color="#000000">) 
                        : maxWidth; 
        </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> usedHeight = orientation==VERTICAL 
                         ? maxHeight * visibleCount + gap * (visibleCount - </font><font style="font-family: monospaced" color="#0000ff">1</font><font style="font-family: monospaced" color="#000000">) 
                         : maxHeight; 
        </font><font style="font-family: monospaced" color="#000080"><b>return</b></font><font style="font-family: monospaced" color="#000000"> ..... 
    } 
 
    </font><font style="font-family: monospaced" color="#000080"><b>public</b></font><font style="font-family: monospaced" color="#000000"> </font><font style="font-family: monospaced" color="#000080"><b>void</b></font><font style="font-family: monospaced" color="#000000"> layoutContainer(Container container){ 
        Insets insets = container.getInsets(); 
 
        Component[] children = container.getComponents(); 
        Dimension dim[] = dimensions(children); 
 
        </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> maxWidth = dim[</font><font style="font-family: monospaced" color="#0000ff">0</font><font style="font-family: monospaced" color="#000000">].width; 
        </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> maxHeight = dim[</font><font style="font-family: monospaced" color="#0000ff">0</font><font style="font-family: monospaced" color="#000000">].height; 
        </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> usedWidth = dim[</font><font style="font-family: monospaced" color="#0000ff">1</font><font style="font-family: monospaced" color="#000000">].width; 
        </font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> usedHeight = dim[</font><font style="font-family: monospaced" color="#0000ff">1</font><font style="font-family: monospaced" color="#000000">].height; 
 
        </font><font style="font-family: monospaced" color="#000080"><b>switch</b></font><font style="font-family: monospaced" color="#000000">(orientation){ 
            </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> HORIZONTAL: 
                </font><font style="font-family: monospaced" color="#000080"><b>switch</b></font><font style="font-family: monospaced" color="#000000">(alignment){ 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> LEFT: 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> TOP: 
                        </font><font style="font-family: monospaced" color="#000080"><b>for</b></font><font style="font-family: monospaced" color="#000000">(</font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> i = </font><font style="font-family: monospaced" color="#0000ff">0</font><font style="font-family: monospaced" color="#000000">, c = children.length; i &lt; c; i++){ 
                            </font><font style="font-family: monospaced" color="#000080"><b>if</b></font><font style="font-family: monospaced" color="#000000">(!children[i].isVisible()) 
                                </font><font style="font-family: monospaced" color="#000080"><b>continue</b></font><font style="font-family: monospaced" color="#000000">; 
                            children[i].setBounds(insets.left+(maxWidth+gap)*i, 
                                                  insets.top, 
                                                  maxWidth, 
                                                  maxHeight); 
                        } 
                        </font><font style="font-family: monospaced" color="#000080"><b>break</b></font><font style="font-family: monospaced" color="#000000">; 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> RIGHT: 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> BOTTOM: 
                        </font><font style="font-family: monospaced" color="#000080"><b>for</b></font><font style="font-family: monospaced" color="#000000">(</font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> i = </font><font style="font-family: monospaced" color="#0000ff">0</font><font style="font-family: monospaced" color="#000000">, c = children.length; i &lt; c; i++){ 
                            </font><font style="font-family: monospaced" color="#000080"><b>if</b></font><font style="font-family: monospaced" color="#000000">(!children[i].isVisible()) 
                                </font><font style="font-family: monospaced" color="#000080"><b>continue</b></font><font style="font-family: monospaced" color="#000000">; 
                            children[i].setBounds(container.getWidth()-insets.right-usedWidth+(maxWidth+gap)*i, 
                                                  insets.top, 
                                                  maxWidth, 
                                                  maxHeight); 
                        } 
                        </font><font style="font-family: monospaced" color="#000080"><b>break</b></font><font style="font-family: monospaced" color="#000000">; 
                } 
                </font><font style="font-family: monospaced" color="#000080"><b>break</b></font><font style="font-family: monospaced" color="#000000">; 
            </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> VERTICAL: 
                </font><font style="font-family: monospaced" color="#000080"><b>switch</b></font><font style="font-family: monospaced" color="#000000">(alignment){ 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> LEFT: 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> TOP: 
                        </font><font style="font-family: monospaced" color="#000080"><b>for</b></font><font style="font-family: monospaced" color="#000000">(</font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> i = </font><font style="font-family: monospaced" color="#0000ff">0</font><font style="font-family: monospaced" color="#000000">, c = children.length; i &lt; c; i++){ 
                            </font><font style="font-family: monospaced" color="#000080"><b>if</b></font><font style="font-family: monospaced" color="#000000">(!children[i].isVisible()) 
                                </font><font style="font-family: monospaced" color="#000080"><b>continue</b></font><font style="font-family: monospaced" color="#000000">; 
                            children[i].setBounds(insets.left, 
                                                  insets.top+(maxHeight+gap)*i, 
                                                  maxWidth, 
                                                  maxHeight); 
                        } 
                        </font><font style="font-family: monospaced" color="#000080"><b>break</b></font><font style="font-family: monospaced" color="#000000">; 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> RIGHT: 
                    </font><font style="font-family: monospaced" color="#000080"><b>case</b></font><font style="font-family: monospaced" color="#000000"> BOTTOM: 
                        </font><font style="font-family: monospaced" color="#000080"><b>for</b></font><font style="font-family: monospaced" color="#000000">(</font><font style="font-family: monospaced" color="#000080"><b>int</b></font><font style="font-family: monospaced" color="#000000"> i = </font><font style="font-family: monospaced" color="#0000ff">0</font><font style="font-family: monospaced" color="#000000">, c = children.length; i &lt; c; i++){ 
                            </font><font style="font-family: monospaced" color="#000080"><b>if</b></font><font style="font-family: monospaced" color="#000000">(!children[i].isVisible()) 
                                </font><font style="font-family: monospaced" color="#000080"><b>continue</b></font><font style="font-family: monospaced" color="#000000">; 
                            children[i].setBounds(insets.left, 
                                                  container.getHeight()-insets.bottom-usedHeight+(maxHeight+gap)*i, 
                                                  maxWidth, 
                                                  maxHeight); 
                        } 
                } 
        } 
    } 
 
    ......
} </font></pre>
    </td>
  </tr>
</table>
<p><font size="2" face="Verdana">How to use this:</font></p>
<table border="1" cellpadding="0" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111" width="100%" id="AutoNumber2">
  <tr>
    <td width="100%">
    <pre><font style="font-family: monospaced" color="#000000">JPanel buttonPanel1 = </font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JPanel(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> EqualsLayout(EqualsLayout.VERTICAL, EqualsLayout.TOP, </font><font style="font-family: monospaced" color="#0000ff">3</font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel1.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;Add&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel1.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;Delete&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel1.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;MoveUp&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel1.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;MoveDown&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
 
JPanel buttonPanel2 = </font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JPanel(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> EqualsLayout(EqualsLayout.HORIZONTAL, EqualsLayout.RIGHT, </font><font style="font-family: monospaced" color="#0000ff">3</font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel2.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;OK&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel2.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;Cancel&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel2.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;Apply&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
buttonPanel2.add(</font><font style="font-family: monospaced" color="#000080"><b>new</b></font><font style="font-family: monospaced" color="#000000"> JButton(</font><font style="font-family: monospaced" color="#008000"><b>&quot;Help&quot;</b></font><font style="font-family: monospaced" color="#000000">)); 
 
JFrame challenge = </font><font style="font-family: monospaced" color="#000080"><b>.....</b></font><font style="font-family: monospaced" color="#000000">
JPanel contentPane = (JPanel)challenge.getContentPane();
contentPane.add(buttonPanel1, BorderLayout.EAST); 
contentPane.add(buttonPanel2, BorderLayout.SOUTH);</font></pre>
    </td>
  </tr>
</table>
<p><a href="http://jroller.com/resources/s/santhosh/equalsLayout_1.jnlp">
<img border="0" src="http://java.sun.com/products/jfc/tsc/sightings/images/webstart.small.jpg" width="115" height="20"></a></p>

</body>

</html>