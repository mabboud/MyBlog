# If this log is to be used for incremental obfuscation / patch generation, 
# add any '.class', '.method', '.field' and '.attribute' restrictions here:


#-DO-NOT-EDIT-BELOW-THIS-LINE------------------DO-NOT-EDIT-BELOW-THIS-LINE--
#
# RetroGuard Bytecode Obfuscator, v2.0.2, a product of Retrologic Systems - www.retrologic.com
#
# Logfile created on Tue Aug 09 04:08:21 GMT+05:30 2005
#
# Jar file to be obfuscated:           SyncScrolling.jar
# Target Jar file for obfuscated code: SyncScrolling_obfsucated.jar
# RetroGuard Script file used:         retroguard.txt
#
#
# WARNING - Methods are called which may unavoidably break in obfuscated
# version at runtime. Please review your source code to ensure that these
# methods are not intended to act on classes within the obfuscated Jar file.
#      Your class santhosh/SyncScrollingDemo uses '.class' or calls java/lang/Class.forName(Ljava/lang/String;)Ljava/lang/Class;
#
# Memory in use after class data structure built: 275712 bytes
# Total memory available                        : 2031616 bytes
#
#
# Obfuscated name overloading frequency:
#
# Names reserved from obfuscation:
#
.class santhosh/SyncScrollingDemo
.method santhosh/SyncScrollingDemo/main ([Ljava/lang/String;)V
#
#
# Obfuscated name mappings (some of these may be unchanged due to polymorphism constraints):
#
.field_map santhosh/SyncScrollingDemo/class$santhosh$SyncScrollingDemo class$santhosh$SyncScrollingDemo
.method_map santhosh/SyncScrollingDemo/class$ (Ljava/lang/String;)Ljava/lang/Class; class$
