# If this log is to be used for incremental obfuscation / patch generation, 
# add any '.class', '.method', '.field' and '.attribute' restrictions here:


#-DO-NOT-EDIT-BELOW-THIS-LINE------------------DO-NOT-EDIT-BELOW-THIS-LINE--
#
# RetroGuard Bytecode Obfuscator, v2.0.2, a product of Retrologic Systems - www.retrologic.com
#
# Logfile created on Thu Jul 07 23:41:49 GMT+05:30 2005
#
# Jar file to be obfuscated:           IncrementalSearch.jar
# Target Jar file for obfuscated code: IncrementalSearch_obfsucated.jar
# RetroGuard Script file used:         retroguard.txt
#
#
# WARNING - Methods are called which may unavoidably break in obfuscated
# version at runtime. Please review your source code to ensure that these
# methods are not intended to act on classes within the obfuscated Jar file.
#      Your class santhosh/IncrementalSearchDemo uses '.class' or calls java/lang/Class.forName(Ljava/lang/String;)Ljava/lang/Class;
#
# Memory in use after class data structure built: 306104 bytes
# Total memory available                        : 2031616 bytes
#
#
# Obfuscated name overloading frequency:
#  'a'   	used 13 times	(52%)
#  'b'   	used 1 times	(4%)
#  'c'   	used 1 times	(4%)
#  'd'   	used 1 times	(4%)
#  'e'   	used 1 times	(4%)
#  'for'   	used 1 times	(4%)
#  'new'   	used 1 times	(4%)
#  'f'   	used 1 times	(4%)
#  'g'   	used 1 times	(4%)
#  'int'   	used 1 times	(4%)
#  'do'   	used 1 times	(4%)
#  'try'   	used 1 times	(4%)
#  'if'   	used 1 times	(4%)
#  Other names (each used in <1% of mappings) used a total of 0 times (0%)
#
#
# Names reserved from obfuscation:
#
.class santhosh/IncrementalSearchDemo
.method santhosh/IncrementalSearchDemo/main ([Ljava/lang/String;)V
#
#
# Obfuscated name mappings (some of these may be unchanged due to polymorphism constraints):
#
.class_map santhosh/FindAction$1 1
.field_map santhosh/FindAction$1/this$0 this$0
.method_map santhosh/FindAction$1/actionPerformed (Ljava/awt/event/ActionEvent;)V actionPerformed
.class_map santhosh/FindAction a
.field_map santhosh/FindAction/shiftDown a
.field_map santhosh/FindAction/popup if
.field_map santhosh/FindAction/searchPanel do
.field_map santhosh/FindAction/ignoreCase for
.field_map santhosh/FindAction/comp int
.field_map santhosh/FindAction/controlDown new
.field_map santhosh/FindAction/searchField try
.method_map santhosh/FindAction/actionPerformed (Ljava/awt/event/ActionEvent;)V actionPerformed
.method_map santhosh/FindAction/changed (Ljavax/swing/JComponent;Ljava/lang/String;Ljavax/swing/text/Position$Bias;)Z a
.method_map santhosh/FindAction/install (Ljavax/swing/JComponent;)V a
.method_map santhosh/FindAction/keyReleased (Ljava/awt/event/KeyEvent;)V keyReleased
.method_map santhosh/FindAction/changed (Ljavax/swing/text/Position$Bias;)V a
.method_map santhosh/FindAction/initSearch (Ljava/awt/event/ActionEvent;)V a
.method_map santhosh/FindAction/keyTyped (Ljava/awt/event/KeyEvent;)V keyTyped
.method_map santhosh/FindAction/keyPressed (Ljava/awt/event/KeyEvent;)V keyPressed
.method_map santhosh/FindAction/insertUpdate (Ljavax/swing/event/DocumentEvent;)V insertUpdate
.method_map santhosh/FindAction/removeUpdate (Ljavax/swing/event/DocumentEvent;)V removeUpdate
.method_map santhosh/FindAction/changedUpdate (Ljavax/swing/event/DocumentEvent;)V changedUpdate
.class_map santhosh/TextComponentFindAction b
.method_map santhosh/TextComponentFindAction/getNextMatch (Ljavax/swing/text/JTextComponent;Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I a
.method_map santhosh/TextComponentFindAction/changed (Ljavax/swing/JComponent;Ljava/lang/String;Ljavax/swing/text/Position$Bias;)Z a
.method_map santhosh/TextComponentFindAction/initSearch (Ljava/awt/event/ActionEvent;)V a
.method_map santhosh/TextComponentFindAction/focusGained (Ljava/awt/event/FocusEvent;)V focusGained
.method_map santhosh/TextComponentFindAction/focusLost (Ljava/awt/event/FocusEvent;)V focusLost
.class_map santhosh/ListFindAction c
.method_map santhosh/ListFindAction/changed (Ljavax/swing/JComponent;Ljava/lang/String;Ljavax/swing/text/Position$Bias;)Z a
.method_map santhosh/ListFindAction/changeSelection (Ljavax/swing/JList;I)V a
.class_map santhosh/ComboFindAction d
.method_map santhosh/ComboFindAction/changed (Ljavax/swing/JComponent;Ljava/lang/String;Ljavax/swing/text/Position$Bias;)Z a
.class_map santhosh/TableFindAction e
.method_map santhosh/TableFindAction/changed (Ljavax/swing/JComponent;Ljava/lang/String;Ljavax/swing/text/Position$Bias;)Z a
.method_map santhosh/TableFindAction/getNextMatch (Ljavax/swing/JTable;Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I a
.method_map santhosh/TableFindAction/changeSelection (Ljavax/swing/JTable;I)V a
.class_map santhosh/TreeFindAction f
.method_map santhosh/TreeFindAction/changed (Ljavax/swing/JComponent;Ljava/lang/String;Ljavax/swing/text/Position$Bias;)Z a
.method_map santhosh/TreeFindAction/changeSelection (Ljavax/swing/JTree;Ljavax/swing/tree/TreePath;)V a
.method_map santhosh/TreeFindAction/getNextMatch (Ljavax/swing/JTree;Ljava/lang/String;ILjavax/swing/text/Position$Bias;)Ljavax/swing/tree/TreePath; a
.class_map santhosh/ListModelFindAction g
.method_map santhosh/ListModelFindAction/getNextMatch (Ljavax/swing/ListModel;Ljava/lang/String;ILjavax/swing/text/Position$Bias;)I a
.field_map santhosh/IncrementalSearchDemo/class$santhosh$IncrementalSearchDemo class$santhosh$IncrementalSearchDemo
.method_map santhosh/IncrementalSearchDemo/class$ (Ljava/lang/String;)Ljava/lang/Class; class$
